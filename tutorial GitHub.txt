

1)Configurar cuenta de Git gub en el equipo

1.1)//Configurar nombre 
git config --global user.name "David"

1.2)//Configurar Correo
git config --global user.email "David_fza@hotmail.com"

1.3)//Configurar Colores para poder diferenciarlos
git config --global color.ui true

1.4)//Lista de cambios
git config --global --list
----------------------------------------------------------------------------------------

2) Crear repositorio en la pagina de GitHub
---------------------------------------------------------------------------------------

3) Crear proyecto en el computador
---------------------------------------------------------------------------------------

4)Paso a Paso para subir una carpeta a GitHub

4.1)//Marca el inicio de nuestro proyecto(se puede parar dentro de la carpeta que se va a trabajar o se va a subir)
	
git init 

4.2)//Comando de Status de los archivos(Nos permite saber como se encuentran los archivos dentro de la carpeta)
git status

4.3)//comando para agregar archivos
git add "c:/tutorial/hola.txt"

//agrega todos los archivos .txt
git add "*.txt"

//Agrega todos los archivos de la carpeta
git add -A

4.4)//Guardar los cambios con un mensaje
git commit -m "Mi primer comentario"

//Borrar commit es el mas simple
git reset --soft

//Borra Absolutamente todo el commit
git reset --hard

4.5)//Nos da una lista con todos los commit que se han echo con su respectiva informacion
git log

//Se crea archivo del log para poder copiar y pegar los bash
git log > commits.txt

// Se escoge el codigo bash del commit que quiere retomar denuevo
git checkout jdlksjfd87f7suifjkjfldsjfdlksjf

//Vuelve al ultimo commit realizado
git checkout master 

4.6)//comando para apuntar al repositorio de internet para subir los archivos
git remote add origin https://github.com/dafer154/miRepositorio

4.7)//Comando para hacer pull
git pull origin mastar

4.8)//Comando para hacer push
git push origin master
---------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------
RAMAS

//Comando para mostrar ramas
git branch

//comando para crear ramas
git branch test

//Comando para elegir la rama el cual se va a trabajar
git checkout test

//Comando para borrar rama
git branch -d test

//Comando para fusionar ramas(se debe parar en la rama el cual va a absorver a la otra en este caso la rama master)
git merge test

//Comando para crear rama y colocarse en ella
git checkout -b test

-------------------------------------------------------------------------------------------
GIT HUB

//Comando para descargar carpeta de GitHub
git clone https://github.com/meteor/meteor.git

//comando para sincronizar los proyectos del PC con GitHUB
git remote add origin https://github.com/dafer154/GitFacilito.git

//Comando para comprobar la conexion
git remote -v

//Comando para borrar el remote
git remote remove origin 

//Comando para subir PUSH forzados
git push origin master -f 
